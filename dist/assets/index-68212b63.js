(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))t(a);new MutationObserver(a=>{for(const i of a)if(i.type==="childList")for(const h of i.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&t(h)}).observe(document,{childList:!0,subtree:!0});function s(a){const i={};return a.integrity&&(i.integrity=a.integrity),a.referrerPolicy&&(i.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?i.credentials="include":a.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function t(a){if(a.ep)return;a.ep=!0;const i=s(a);fetch(a.href,i)}})();class n extends Phaser.Scene{constructor(){super({key:"BootScene"})}create(){this.scene.start("PreloadScene")}}class o extends Phaser.Scene{constructor(){super({key:"PreloadScene"})}preload(){this.load.image("player","assets/Player.png"),this.load.image("civilian","assets/Civilian.png"),this.load.image("fighter","assets/Fighter.png"),this.load.image("bandit","assets/Bandit.png"),this.load.image("frigate","assets/Frigate.png"),this.load.image("starship","assets/Starship.png"),this.load.image("laser_blue","assets/laserBlue07.png"),this.load.image("laser_red","assets/laserRed01.png"),this.load.image("laser_green","assets/laserGreen13.png")}create(){this.scene.start("MenuScene")}}class c extends Phaser.Scene{constructor(){super({key:"GameScene"}),this.score=0,this.health=100,this.gameOver=!1,this.currentWave=1,this.enemiesKilled=0,this.fightersSpawned=0,this.starshipsSpawned=0,this.banditsSpawned=0}create(){this.screenWidth=this.sys.game.config.width,this.screenHeight=this.sys.game.config.height,this.player=this.physics.add.sprite(this.screenWidth/2,this.screenHeight-50,"player"),this.player.setCollideWorldBounds(!0),this.player.setScale(.5),this.healthBar=this.add.rectangle(this.player.x,this.player.y+30,50,5,65280),this.healthBarBackground=this.add.rectangle(this.player.x,this.player.y+30,50,5,16711680),this.healthBarBackground.setDepth(0),this.healthBar.setDepth(1),this.enemies=this.physics.add.group(),this.projectiles=this.physics.add.group(),this.enemyProjectiles=this.physics.add.group(),this.scoreText=this.add.text(16,16,"Score: 0",{fontSize:"24px",fill:"#fff"}),this.waveText=this.add.text(16,50,"Wave: 1",{fontSize:"24px",fill:"#fff"}),this.cursors=this.input.keyboard.createCursorKeys(),this.fireKey=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE),this.physics.add.overlap(this.projectiles,this.enemies,this.hitEnemy,null,this),this.physics.add.overlap(this.player,this.enemies,this.hitPlayer,null,this),this.physics.add.overlap(this.player,this.enemyProjectiles,this.hitPlayerWithProjectile,null,this),this.startWave1()}update(){if(this.gameOver){this.fireKey.isDown&&(this.scene.restart(),this.score=0,this.health=100,this.gameOver=!1,this.currentWave=1,this.enemiesKilled=0);return}this.healthBarBackground.setPosition(this.player.x,this.player.y+30),this.healthBar.setPosition(this.player.x,this.player.y+30),this.healthBar.width=this.health/100*50,this.cursors.left.isDown?this.player.setVelocityX(-300):this.cursors.right.isDown?this.player.setVelocityX(300):this.player.setVelocityX(0),Phaser.Input.Keyboard.JustDown(this.fireKey)&&this.fire(),this.player.setVelocityY(0),this.player.y=this.screenHeight-50,this.updateProjectiles(),this.updateEnemies(),this.checkWaveCompletion()}updateProjectiles(){this.projectiles.getChildren().forEach(e=>{e.y<0&&e.destroy()})}updateEnemies(){this.enemies.getChildren().forEach(e=>{e.y>=this.screenHeight*.3&&e.enemyType!=="civilian"&&e.setVelocityY(-25),e.enemyType!=="civilian"?(e.fireTimer===void 0&&(e.fireTimer=this.time.now+Phaser.Math.Between(2e3,5e3)),this.time.now>e.fireTimer&&(this.enemyFire(e),e.fireTimer=this.time.now+Phaser.Math.Between(2e3,5e3))):e.setVelocityY(100),e.enemyType==="fighter"?this.updateFighterMovement(e):e.enemyType==="starship"?this.updateStarshipMovement(e):e.enemyType==="bandit"&&this.updateBanditMovement(e),e.enemyType==="civilian"&&e.y>this.screenHeight&&e.destroy()})}startWave1(){this.spawnFighters(3)}startWave2(){this.currentWave=2,this.waveText.setText("Wave: 2"),this.spawnStarships(2)}startWave3(){this.currentWave=3,this.waveText.setText("Wave: 3"),this.spawnBandits(3),this.spawnCivilians(2)}spawnFighters(e){const s=this.screenWidth/(e+1);for(let t=0;t<e;t++){const a=s*(t+1),i=this.enemies.create(a,50,"fighter");i.enemyType="fighter",i.health=35,i.setVelocityY(15),i.originalX=a,i.setScale(.5),this.fightersSpawned++}}spawnStarships(e){const s=this.screenWidth/(e+1);for(let t=0;t<e;t++){const a=s*(t+1),i=this.enemies.create(a,50,"starship");i.enemyType="starship",i.health=140,i.setVelocityY(15),i.setScale(.5),this.starshipsSpawned++}}spawnBandits(e){const s=this.screenWidth/(e+1);for(let t=0;t<e;t++){const a=s*(t+1),i=this.enemies.create(a,50,"bandit");i.enemyType="bandit",i.health=105,i.setVelocityY(20),i.setScale(.5),this.banditsSpawned++}}spawnCivilians(e){const s=this.screenWidth/(e+1);for(let t=0;t<e;t++){const a=s*(t+1),i=this.enemies.create(a,50,"civilian");i.enemyType="civilian",i.setVelocityY(15),i.setScale(.5)}}updateFighterMovement(e){e.pattern||(e.pattern="sine",e.patternOffset=Phaser.Math.Between(0,200)),e.y>=50&&e.y<=this.screenHeight*.3&&(e.x=e.originalX+Math.sin((e.y+e.patternOffset)/50)*100)}updateStarshipMovement(e){e.nextDirectionChange||(e.nextDirectionChange=this.time.now+2e3),this.time.now>e.nextDirectionChange&&(e.setVelocityX(Phaser.Math.Between(-30,30)),e.nextDirectionChange=this.time.now+2e3)}updateBanditMovement(e){e.nextMove||(e.nextMove=this.time.now+1e3),this.time.now>e.nextMove&&(e.setVelocity(Phaser.Math.Between(-40,40),Phaser.Math.Between(-15,40)),e.nextMove=this.time.now+1e3)}fire(){const e=this.projectiles.create(this.player.x,this.player.y-20,"laser_red");e.setVelocityY(-400),e.setScale(.5)}enemyFire(e){const s=this.enemyProjectiles.create(e.x,e.y+20,"laser_blue");s.setVelocityY(150),s.setScale(.5)}hitEnemy(e,s){if(e.destroy(),s.enemyType==="civilian"){s.destroy(),this.score-=25,this.scoreText.setText("Score: "+this.score);return}if(s.enemyType==="fighter")s.destroy(),this.enemiesKilled++,this.score+=10;else if(s.health-=35,s.health<=0)switch(s.destroy(),this.enemiesKilled++,s.enemyType){case"starship":this.score+=25;break;case"bandit":this.score+=30;break}this.scoreText.setText("Score: "+this.score)}hitPlayer(e,s){if(s.enemyType!=="civilian"){switch(s.enemyType){case"fighter":this.health-=10;break;case"starship":this.health-=20;break;case"bandit":this.health-=25;break}s.destroy(),this.health<=0&&(this.gameOver=!0,this.add.text(this.screenWidth/2,this.screenHeight/2,`Game Over
Press SPACE to restart`,{fontSize:"32px",fill:"#fff",align:"center"}).setOrigin(.5))}}hitPlayerWithProjectile(e,s){s.destroy(),this.health-=10,this.health<=0&&(this.gameOver=!0,this.add.text(this.screenWidth/2,this.screenHeight/2,`Game Over
Press SPACE to restart`,{fontSize:"32px",fill:"#fff",align:"center"}).setOrigin(.5))}checkWaveCompletion(){if(!this.gameOver)switch(this.currentWave){case 1:this.enemies.countActive()===0&&this.fightersSpawned<6?this.spawnFighters(3):this.enemies.countActive()===0&&this.fightersSpawned>=6&&this.startWave2();break;case 2:this.enemies.countActive()===0&&(this.starshipsSpawned<6?this.spawnStarships(2):this.startWave3());break;case 3:this.enemies.countActive()===0&&this.banditsSpawned>=3&&(this.add.text(this.screenWidth/2,this.screenHeight/2,`You Win!
Score: `+this.score,{fontSize:"32px",fill:"#fff",align:"center"}).setOrigin(.5),this.gameOver=!0);break}}}class l extends Phaser.Scene{constructor(){super({key:"BackgroundScene",active:!1}),this.stars=[],this.planets=[]}create(){for(let s=0;s<100;s++){const t=Phaser.Math.Between(0,this.sys.game.config.width),a=Phaser.Math.Between(0,this.sys.game.config.height),i=this.add.circle(t,a,1,16777215);this.stars.push({obj:i,speed:Phaser.Math.FloatBetween(.1,.5)})}const e=[16711680,65280,255,16711935];for(let s=0;s<4;s++){const t=Phaser.Math.Between(0,this.sys.game.config.width),a=Phaser.Math.Between(0,this.sys.game.config.height),i=this.add.circle(t,a,Phaser.Math.Between(5,15),e[s]);this.planets.push({obj:i,speedX:Phaser.Math.FloatBetween(-.2,.2),speedY:Phaser.Math.FloatBetween(-.2,.2)})}}update(){const e=this.sys.game.config.width,s=this.sys.game.config.height;for(const t of this.stars)t.obj.x-=t.speed,t.obj.x<0&&(t.obj.x=e,t.obj.y=Phaser.Math.Between(0,s));for(const t of this.planets)t.obj.x+=t.speedX,t.obj.y+=t.speedY,(t.obj.x<0||t.obj.x>e)&&(t.speedX*=-1),(t.obj.y<0||t.obj.y>s)&&(t.speedY*=-1)}}class d extends Phaser.Scene{constructor(){super({key:"MenuScene"})}create(){const e=this.cameras.main.width,s=this.cameras.main.height;this.add.text(e/2,s/3,"SPACE DEFENDER",{fontSize:"48px",fontFamily:"Arial",color:"#ffffff",align:"center"}).setOrigin(.5);const t=this.add.rectangle(e/2,s/2,200,50,65280);this.add.text(e/2,s/2,"PLAY GAME",{fontSize:"24px",fontFamily:"Arial",color:"#000000"}).setOrigin(.5),t.setInteractive(),t.on("pointerover",()=>{t.setFillStyle(52224)}),t.on("pointerout",()=>{t.setFillStyle(65280)}),t.on("pointerdown",()=>{this.scene.start("BackgroundScene"),this.scene.start("GameScene")}),this.add.text(e/2,s*.7,`Use arrow keys to move
Press SPACE to shoot
Protect civilian ships!`,{fontSize:"20px",fontFamily:"Arial",color:"#ffffff",align:"center"}).setOrigin(.5)}}const p={type:Phaser.AUTO,width:800,height:600,parent:"game",physics:{default:"arcade",arcade:{gravity:{y:0},debug:!1}},scene:[n,o,d,l,c],scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH}};window.addEventListener("load",()=>{new Phaser.Game(p)});
